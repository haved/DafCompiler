#+TITLE: Installing LLVM from source
As far as I can tell I need a debug build of LLVM to use the =llvm::Module::dump()=-method.
It would be weird if your package
** Should you remove package manager installs?
All our files will be installed in =/usr/local/=, so our install shouldn't interfere with any package managers installs.
I don't know if cmake will prefer our =/usr/local/lib/cmake/llvm/=-files, but =CMakeLists.txt= is set up to print where it found =LLVMConfig.cmake=, so check it.
** Download source, build and install llvm
Go to http://releases.llvm.org/download.html
and download the LLVM source code tarball.
I don't know what version of LLVM is the newest at the time of reading, but 6.0.0 worked for me at the time of writing.
Put the llvm-6.0.0.src folder somewhere sensible, and make a build folder next to it.
In this build folder we run cmake, pointing to the source dir.
We tell cmake to build a Debug build, and also tell LLVM to build a shared library, and to use this for its tools.
It is important that we don't move any folders after cmake has been called
After the first cmake call we build and install
#+BEGIN_SRC bash
mkdir llvm-6.0.0.debugBuild
cd llvm-6.0.0.debugBuild
cmake -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_LLVM_DYLIB=True -DLLVM_LINK_LLVM_DYLIB=True ../llvm-6.0.0.src
cmake --build .
sudo make install
#+END_SRC
*** Cleanup
LLVM is big. After installing you can remove all items in the build directory, but I'd suggest keeping =install_manifest.txt= in case you want to uninstall.
*** Uninstalling
=install_manifest.txt= contains all the files llvm installed outside of the build folder.
I'm not sure what happens if a file already existed, but I don't know how that would happen.
Uninstalling is a matter of removing all the files listed, and maybe remove the resulting empty folders.
