namedef daf := import<"daf.memory">+import<"daf.iostream">;

typedef string := class {
	//no SSO here
	mut m_ptr : Optional([]mut char);
	mut m_length : usize;
};

def useString:=() {
	let a:=string("Halla"); //uses the ctor
	let b:=a; //This copies from a, using the default string ctor taking a
	let c:=string(b); //This'll also use the copy ctor
	c = move a; //calls c member function that takes move a, or destructs then moves
	//We won't tolerate using move if we don't actually move
};