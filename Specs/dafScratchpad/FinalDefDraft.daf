
def do(def tobedo):=tobedo;

def delay(a:i32, func:VirtBox( () )) {
	get_global_timeout_queue.push(time.now().addMs(a), move func);
};

def main {
	mut value := 6;
	def increase := value+=1;
	def print := print(value);
	print;
	increase;
	print;
	do(def:=increase);
	print("after do(def:=increase)");
	print;
	delay(1000, VirtBox( () )(capture(&mut value):=increase));
	print("Delay started");
	print;
	wait(1000);
	print("After waiting 1 sec");
	print;
};


typedef VirtBox(T) := class {
	m_vtable:VTable(T);
	m_ptr:&mut T;

	def new(T2/T) := (move val:T2):ctor This {
		m_vtable = VTable(T).getFrom(T2);
		m_ptr = malloc(T2);
		(@m_ptr as uncrt) = move val;
	};

	def delete(dtor this:This) {
		m_vtable.delete(m_ptr);
		free(m_ptr);
	};

	def stuff := 5;
};
