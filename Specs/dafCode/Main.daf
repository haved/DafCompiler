namedef _ := import<"daf.IO">;

typedef ToType<T> := trait {
    pub def copy_to:(&this, &uncrt a:T);
		pub def if :class=T copy_to:=(&this:class, &uncrt a:T) a = this; 
}

with as ToType<[]char>

typedef String := {
    chars:Vec<char>;
    pub def empty:=ctor() { chars.=empty(); };
    pub def copy<I\ToType<[]char>>:=ctor(array:T) array.copy_to(chars);
		pub def

}

def main:=():int {
		println("\n"+"Welcome to the daf Dart Score counter!");

		print("How many players? ");
		let players := {
				let mut playersInput:int;
		    while !input().try_parse_int(uncrt playersInput) && playersInput > 0
				    println("No!  Enter a number above 0!");
				playersInput };

		mut names:=Vec<String>.reserve(players);
		{
				mut name:string; //uncertain
				for i in 0..players {
						printC!("Name of player #", i, ":");
						name := input(); //String
						if name.length == 0
					 		  retry;
						names.push_back_move(move name);
				}
		}

}