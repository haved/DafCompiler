
// +-----------------------+
// | The many uses of with |
// +-----------------------+

//Adding a trait when defining
typedef Rectangle := class with Copy {
	mut x:f64;
	mut y:f64;
};

//Appending a trait and/or functionality
with Box as Shape+{
	pub def area(this:This) := this.width * this.height;
};

//Require functionality on a value (same as going for its type)
with a as Debug {
	debug(a);
};

//Add functionality to a trait
with Number as Incrementable {
	def increment(this:This) := this+1;
};

//Add functionality to a generic trait
with Vector($T) as Clearable;

//A with can define some behaviour in a scope
