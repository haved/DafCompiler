
// a type has a copy(:This) function if all its members have a copy-function, and it isn't deleted
// a type with a copy() is implicit copy if all its members are implicit copy, or it's given the ImplicitCopy trait

typedef _ := import("other");

require Printable;

def main {
	5.print();
};

typedef Node := struct {
	pub left, right: &mut Node;
};

def main {
	let a := Node{};
	let b := &mut Node;
};

typedef ImplcitCopy := trait{};

def get_copy(a:$T):T {
	require T as ImplicitCopy {
		let copy:T = a;
	} else require T as Copy {
		let copy:T = a.copy();
	}
}


