/*let mut a := 5;
pub def b := 5;

//This is a comment
pub def main:=() {
    printf("4+8 is #( 4 8 + #)");
    printf("true = #( true #)");
    printf("false = #( false #)");

    printf("##Test of pound symbol");
}
#macro Test_Macro<name;age> Hello #name! You are #age years old. ##ToBeEvaluated
*/
/**
 This is a multiline comment,
 yo
*/
/*
#macro VERSION 2.15
#macro Test<etwas,gut> $
#etwas-#gut<>ay
$
#macro H<> $$

#tst

def printVersion:=() {
    printf("Version is #VERSION<>Hello");
    printf("V is #VERSION    Test     Another #VERSION    <>Test");
    printf("V is #VERSION#VERSION< >#VERSION lorem ipsum just to count");
    printf("Test of paramaters: #Test<#VERSION, #Test<Halla, Balla>>");
}*/

#macro VERSION 2.15
printf("Version is #VERSION");
#macro Test<param> Test:#param-EndTest;
printf("Testing bolle: '#Test<Bolle>'");
printf("Version test: '#Test<#VERSION>'");
#macro Test2<Do;Re,Mi> $#Do-#Re-#Mi-#Do<>man$
printf("#Test2<ada;brb,coc>Dude");

#macro TRANSMIT<whatToDo<something>,somethingElse> ==START== #whatToDo<#somethingElse> ==END_OF_TRANSMISSION==

#macro DoSomething I'm doing #something!

printf("#TRANSMIT<#DoSomething,cheese>");