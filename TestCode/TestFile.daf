//import daf.iostream as _;

let x:=2;
def a:=4;
let mut b:=0x6.1p0f;

def test:=(3);

def main:=();
def bro:=3;
def ey:=(hi:int);

/*def main:=() {
    let mut a:=4;
    a=ey(a);
    boi(boi(boi(a)))
    printS("A is: ");print!int(a);
};*/

/*def ey:=inline pure(a:int):int a+4; //Inline if the compiler wants

def boi:=$(def mut a:int):mut int a++; //Super-inline

def arrayTest:=(a:[]mut char) { //[]char is actually a pointer to a [x]char
    print!int(a.size);
    let myDynamic:[..]char.allocateWith(10, 0);
    let otherString:[..]char="This is 10";
    //Type of "Hi" is []char
    otherString.append(" but now it's 26");
    print![]char(&otherString); //Automaticly from &[x|..]char to []char
};

def a:=() {

};

def b:=5;
*/