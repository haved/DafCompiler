//import daf.iostream as _;
//pub import other.file as OF; //If a file imports this file, you use thisFile.OF.field;
/*
let x:=a;
def a:=b;
let mut b:=g;
*/
def test:=(4.1+5.2)*2.4e2f32;

def main:=() {
let mut a:=456;
a = 4.3 + 4. + .5;
a = 234u8 + 67i8 - 4u16 + 789i16 - 5u32 * 778i32 / 65u64 % 4u64;
a = 4e6 + 3e7u32 + 2e8i64;
a = 0x4 - 0b100101 + 0x5e3u16 - 0x23fAbCi64;
a = 5;
a = 0x3.4p2 - 0x7.34p0f64 + 0x5.p2f32;
a = 0.4f32 - 0.8f64;
};

//int is not a define type. You'll have to define it yourself

/*def main:=inline (&hi:int):mut int 4;
def my:=(&mut bruh:int) eyo;
def bro:=3;
def func:=():int {
    let mut a:=5;
    def b:=5;
    def mut h:=a;
    //i+2;
    b=&a;
    ++b;
    g=& &mut eyo;

    let mut a:=5-3;
    def let mut b := a;
    ++b;
    a++;
    b++;
    hello(23);
};*/
//def ey:=def(&move hi:int)6;
/*
def getName:=(&a:Person) a.getName();

import DafCompiler as DC;

def build:=() {
    DC.beginExecutable("MyOutput");
    DC.addIncludeDir("src/");
    DC.addIncludeDir("libs/MyLib/include");
    DC.addLinkLibrary("libs/MyLib/lib/mylib.a"); //Would normaly be included by the header, but oh well
    DC.addSourceRecursivly("me.Main"); //Stays inside the included directory
    if(DC.foundChanges("MyOutput.lock")) {
      DC.compile();
      DC.saveExecutable();
    }
    DC.end();
}*/